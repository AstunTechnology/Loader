# The directory containing your source files.
# All supported files in the specified directory and
# it's descendants will be loaded.
src_dir=/path/to/source/data/folder

# The directory used to store the SQL files created by the PGDump driver
out_dir=/path/to/output/data/folder

# The directory used to store temporary working files during loading.
tmp_dir=/path/to/temp/folder

# Use the PGDump driver which will output a SQL file to disk.
# Don't create schema, tables or indexes at this point as we will do that
# manually.
# The PG_LIST_ALL_TABLES config is important for AddressBase Premium as not all
# tables have geometry and therefore do not appear in the geometry_columns table
ogr_cmd=ogr2ogr --config PG_LIST_ALL_TABLES YES --config PG_USE_COPY YES --config GML_EXPOSE_FID NO -skipfailures -lco spatial_index=off -lco create_table=off -lco schema=addressbase_premium -lco create_schema=off -f PGDump $output_dir/$base_file_name.sql $file_path

# Use the AddressBase Premium prep class to tease out nested feature types
prep_cmd=python prepgml4ogr.py $file_path prep_osgml.prep_addressbase_premium

# Load the SQL file produced by the PGDump driver using psql and delete it once
# done
post_cmd=sh -c 'PGPASSWORD=postgres psql -h localhost -U postgres -d postgis -f $output_dir/$base_file_name.sql && rm $output_dir/$base_file_name.sql'

gfs_file=../gfs/addressbase_premium_postgres.gfs

debug=False
